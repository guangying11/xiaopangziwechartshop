<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>XiaoPangZi.WeChart.Shop</groupId>
  <artifactId>Xpz</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>xpz</name><!--用户描述项目的名称，无关紧要的东西，可选  -->
  <url>www.xxx.com</url><!--写明开发团队的网站，无关紧要，可选 -->
  
  <properties> <!--是为pom定义一些常量，在pom中的其它地方可以直接引用${project.build.sourceEncoding}--> 
	  <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>  
	  <spring.version>4.1.4.RELEASE</spring.version>  
	  <jackson.version>2.5.0</jackson.version>  
  </properties>
  
  <dependencies>
  	   <dependency>
		   <groupId>junit</groupId>
		   <artifactId>junit</artifactId>
		   <version>4.12</version>
	   </dependency>  
       <!-- spring -->  
       <dependency>  
           <groupId>org.springframework</groupId>  
           <artifactId>spring-core</artifactId>  
           <version>${spring.version}</version>  
       </dependency>  
 
       <dependency>  
           <groupId>org.springframework</groupId>  
           <artifactId>spring-beans</artifactId>  
           <version>${spring.version}</version>  
       </dependency>  
 
       <dependency>  
           <groupId>org.springframework</groupId>  
           <artifactId>spring-context</artifactId>  
           <version>${spring.version}</version>  
       </dependency>  
 
       <dependency>  
           <groupId>org.springframework</groupId>  
           <artifactId>spring-tx</artifactId>  
           <version>${spring.version}</version>  
       </dependency>  
 
       <dependency>  
           <groupId>org.springframework</groupId>  
           <artifactId>spring-web</artifactId>  
           <version>${spring.version}</version>  
       </dependency>  
 
       <dependency>  
           <groupId>org.springframework</groupId>  
           <artifactId>spring-webmvc</artifactId>  
           <version>${spring.version}</version>  
       </dependency>  
 
       <dependency>  
           <groupId>org.springframework</groupId>  
           <artifactId>spring-jdbc</artifactId>  
           <version>${spring.version}</version>  
       </dependency>  
 
       <dependency>  
           <groupId>org.springframework</groupId>  
           <artifactId>spring-test</artifactId>  
           <version>${spring.version}</version>  
           <scope>test</scope>  
       </dependency>  
 
       <!-- mybatis 包 -->  
       <dependency>  
           <groupId>org.mybatis</groupId>  
           <artifactId>mybatis</artifactId>  
           <version>3.2.8</version>  
       </dependency>  
 
       <!--mybatis spring 插件 -->  
       <dependency>  
           <groupId>org.mybatis</groupId>  
           <artifactId>mybatis-spring</artifactId>  
           <version>1.2.2</version>  
       </dependency>  
       
       <!-- mysql连接 -->  
       <dependency>  
           <groupId>mysql</groupId>  
           <artifactId>mysql-connector-java</artifactId>  
           <version>5.1.34</version>  
       </dependency>  
 	   
       <!-- 数据源 -->  
       <dependency>  
           <groupId>com.alibaba</groupId>  
           <artifactId>druid</artifactId>  
           <version>1.0.12</version>  
       </dependency>  
 
       <dependency>  
           <groupId>org.aspectj</groupId>  
           <artifactId>aspectjweaver</artifactId>  
           <version>1.8.4</version>  
       </dependency>  
 
       <!-- log4j -->  
       <dependency>  
           <groupId>log4j</groupId>  
           <artifactId>log4j</artifactId>  
           <version>1.2.17</version>  
       </dependency>  
 
       <!-- servlet -->  
       <dependency>  
           <groupId>javax.servlet</groupId>  
           <artifactId>servlet-api</artifactId>  
           <version>3.0-alpha-1</version>
           <scope>provided</scope>  
       </dependency>  
 
       <dependency>  
           <groupId>javax.servlet</groupId>  
           <artifactId>jstl</artifactId>  
           <version>1.2</version>  
       </dependency>  
 
       <!-- json -->  
       <dependency>  
           <groupId>org.codehaus.jackson</groupId>  
           <artifactId>jackson-mapper-asl</artifactId>  
           <version>1.9.13</version>  
       </dependency>  
 
       <dependency>  
           <groupId>com.alibaba</groupId>  
           <artifactId>fastjson</artifactId>  
           <version>1.2.3</version>  
       </dependency>  
 
       <dependency>  
           <groupId>com.fasterxml.jackson.core</groupId>  
           <artifactId>jackson-annotations</artifactId>  
           <version>${jackson.version}</version>  
       </dependency>  
 
       <dependency>  
           <groupId>com.fasterxml.jackson.core</groupId>  
           <artifactId>jackson-core</artifactId>  
           <version>${jackson.version}</version>  
       </dependency>  
 
       <dependency>  
           <groupId>com.fasterxml.jackson.core</groupId>  
           <artifactId>jackson-databind</artifactId>  
           <version>${jackson.version}</version>  
       </dependency>  
       <!-- 文件上传 -->  
       <dependency>  
           <groupId>commons-io</groupId>  
           <artifactId>commons-io</artifactId>  
           <version>2.4</version>  
       </dependency>  
 
       <dependency>  
           <groupId>commons-fileupload</groupId>  
           <artifactId>commons-fileupload</artifactId>  
           <version>1.2.2</version>  
       </dependency>  
    </dependencies>
    
    <build>  
        <finalName>springmvc_mybatis</finalName>
        <resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>  
        <plugins> 
        	<!--自动生成mybatis代码插件  --> 
            <plugin>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-maven-plugin</artifactId>
                <version>1.3.2</version>
                 <configuration>
                    <verbose>true</verbose>
                    <overwrite>true</overwrite>
                </configuration>
            </plugin>
            <!--Maven 集成Tomcat插件  -->
            <plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<!-- or if you want to use tomcat 6.x <artifactId>tomcat6-maven-plugin</artifactId> -->
				<version>2.0</version>
				<configuration>
					<!-- http port -->
					<port>8080</port>
					<!-- application path always starts with / -->
					<path>/xpz</path>
					<!-- optionnal path to a context file -->
					<!--<serverXml>/opt/newrepo/tulando/trunk/conf/server.xml</serverXml> -->
					<!-- <contextFile>${project.parent.basedir}/conf/context.xml</contextFile> -->
					<!-- optionnal system propoerties you want to add -->
					<systemProperties>
						<catalina.home>${project.parent.basedir}/</catalina.home>
						<!--<appserver.base>/Users/olamy/dev/sources/tomcat/maven-plugin-svn/target/checkout/target/appserver-base</appserver.base> 
							<appserver.home>/Users/olamy/dev/sources/tomcat/maven-plugin-svn/target/checkout/target/appserver-home</appserver.home> 
							<derby.system.home>/Users/olamy/dev/sources/tomcat/maven-plugin-svn/target/checkout/target/appserver-base/logs</derby.system.home> 
							<java.io.tmpdir>/Users/olamy/dev/sources/tomcat/maven-plugin-svn/target/checkout/target</java.io.tmpdir> -->
					</systemProperties>
					<!-- if you want to use test dependencies rather than only runtime -->
					<useTestClasspath>false</useTestClasspath>
					<!-- optionnal if you want to add some extra directories in the class 
						loader -->
					<warSourceDirectory>src/main/webapp</warSourceDirectory>
					<additionalClasspathDirs>
						<additionalClasspathDir></additionalClasspathDir>
					</additionalClasspathDirs>
				</configuration>
				<!-- if you need some extra dependencies only for running the embeded 
					tomcat add them in the plugin dependencies -->
			</plugin>
			
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.2</version>
				<configuration>
					<source>1.7</source><!-- 源代码使用的开发版本 -->
					<target>1.7</target><!-- 需要生成的目标class文件的编译版本 -->
					<!-- 一般而言，target与source是保持一致的，但是，有时候为了让程序能在其他版本的jdk中运行(对于低版本目标jdk，源代码中需要没有使用低版本jdk中不支持的语法)，会存在target不同于source的情况 -->
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<!-- war插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
					<webResources>
						<resource>
							<!-- 元配置文件的目录，相对于pom.xml文件的路径 -->  
							<directory>src/main/webapp</directory>
							<!-- 是否过滤文件，也就是是否启动auto-config的功能 -->
							<!-- <filtering>true</filtering> -->
							<includes>
								<include>**/*.xml</include>
								<include>**/*.properties</include>
							</includes>
						</resource>
					</webResources>
				</configuration>
			</plugin>
        </plugins>  
    </build>
</project>